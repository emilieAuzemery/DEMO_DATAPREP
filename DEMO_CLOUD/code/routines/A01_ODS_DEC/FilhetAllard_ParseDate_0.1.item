package routines;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class FilhetAllard_ParseDate {
	
	
	

    /**
     * Routine générique transforme une date numérique «AS400» en date ORACLE.
     * 
     */
	
	
    public static Date ParseDate(Integer date_AS400) throws ParseException {
    	
    	Integer new_date=date_AS400;
    	
    	
    	/** Si la <date AS400> est égale à 0 Alors sortie = NULL */
    	
    	
    	if (new_date==0) return null;
    	
    	if (new_date==99999999) return TalendDate.parseDate("yyyyMMdd","99991231");
    	
    	
    	/** Si la <date AS400> est inférieure à 1000000 Alors <date AS400> = 20000000 + <date AS400> */
    	
    	
    	if(new_date <1000000) { 
    		new_date = 20000000 + new_date; 
    	}
    	else { 
    		if (String.valueOf(new_date).endsWith("0000")) {
    			new_date = new_date + 101;
    		}
    	}
    	
    	
    	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
    	dateFormat.setLenient(false);
    	Date date = null;
    	
    	
    	/** Si la <date AS400> calculée au format AAAAMMJJ n’est pas une date */
    	
    	try {
    	    date = (Date) dateFormat.parse( Integer.toString(new_date));
    	    
    	    return date;
    	    
    	}
    	
    	
    	/** Si la <date AS400> calculée au format AAAAMMJJ n’est pas une date */
    	
    	catch (Exception e) {
    		
    		date = (Date) dateFormat.parse( "19000101");
    	    
    	    return date;
    	}
    		
    	
    }
}
